{"version":3,"sources":["models/user.js","views/admin/user/List.jsx"],"names":["user","getUserList","params","axios","get","uri","userList","getPieData","userPie","echarts","TitleComponent","TooltipComponent","LegendComponent","PieChart","CanvasRenderer","LabelLayout","columns","title","dataIndex","key","render","text","record","size","List","state","data","page","search","isModalVisible","handleOk","setState","ghost","subTitle","extra","type","onClick","this","showModal","bind","column","Item","label","pagination","rowKey","id","dataSource","style","textAlign","marginTop","background","height","lineHeight","paddingTop","onChange","changePage","defaultCurrent","total","showSizeChanger","visible","closable","width","footer","loadData","model","keyword","then","res","errNo","paginate","console","log","option","chartDom","document","getElementById","myChart","subtext","left","tooltip","trigger","formatter","legend","orient","series","name","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","message","error","Component"],"mappings":"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","file":"static/js/10.cee81a1b.chunk.js","sourcesContent":["import uri from \"@/config/uri\";\r\nimport axios from \"@/services/request\";\r\n\r\nconst user = {\r\n    // 获取用户列表\r\n    getUserList(params) {\r\n        return axios.get(uri.userList, {\r\n            params,\r\n        });\r\n    },\r\n    // 获取统计用户信息\r\n    getPieData() {\r\n        return axios.get(uri.userPie);\r\n    },\r\n};\r\n\r\nexport default user;\r\n","import React, { Component } from \"react\";\r\nimport { PageHeader, Button, Descriptions, Table, Space, Pagination, Modal, message } from \"antd\";\r\nimport model from \"@/models/user\";\r\nimport * as echarts from \"echarts/core\";\r\nimport { TitleComponent, TooltipComponent, LegendComponent } from \"echarts/components\";\r\nimport { PieChart } from \"echarts/charts\";\r\nimport { LabelLayout } from \"echarts/features\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\n\r\necharts.use([TitleComponent, TooltipComponent, LegendComponent, PieChart, CanvasRenderer, LabelLayout]);\r\n// 表头\r\nconst columns = [\r\n    {\r\n        title: \"序号\", // 表头字段的显示名称\r\n        dataIndex: \"id\", // 该列的数据源属性名（后端返回的属性名）\r\n        key: \"id\", // 是用于保持唯一的\r\n        // render: (text) => <a>{text}</a>,    // 对于数据进行加工后展示的\r\n    },\r\n    {\r\n        title: \"用户名\",\r\n        dataIndex: \"username\",\r\n        key: \"username\",\r\n    },\r\n    {\r\n        title: \"手机号\",\r\n        dataIndex: \"mobile\",\r\n        key: \"mobile\",\r\n    },\r\n    {\r\n        title: \"邮箱\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n    },\r\n    {\r\n        title: \"状态\",\r\n        key: \"status\",\r\n        dataIndex: \"status\",\r\n        render: (text) => {\r\n            return text === \"1\" ? \"正常\" : \"禁用\";\r\n        },\r\n    },\r\n    {\r\n        title: \"性别\",\r\n        key: \"gender\",\r\n        dataIndex: \"gender\",\r\n        render: (text) => {\r\n            if (text === \"1\") {\r\n                return \"男\";\r\n            }\r\n            if (text === \"2\") {\r\n                return \"女\";\r\n            }\r\n            if (text === \"3\") {\r\n                return \"保密\";\r\n            }\r\n        },\r\n    },\r\n    {\r\n        title: \"操作\",\r\n        key: \"action\",\r\n        // text：当前单元格对应的数据\r\n        // record：当前整条数据的对象\r\n        render: (text, record) => (\r\n            <Space size=\"middle\">\r\n                <span>编辑</span>\r\n                <span>删除</span>\r\n            </Space>\r\n        ),\r\n    },\r\n];\r\n\r\nclass List extends Component {\r\n    state = {\r\n        data: [],\r\n        page: 1, // 当前页码\r\n        search: \"\", // 搜索关键词\r\n        // 模态窗口\r\n        isModalVisible: false,\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* 页头部分 */}\r\n                <PageHeader\r\n                    ghost={false}\r\n                    title=\"用户列表\"\r\n                    subTitle=\"以列表的形式呈现出会员的基本信息\"\r\n                    extra={[\r\n                        <Button key=\"2\" type=\"primary\">\r\n                            添加用户\r\n                        </Button>,\r\n                        <Button key=\"1\" onClick={this.showModal.bind(this)} type=\"primary\">\r\n                            报表展示\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <Descriptions size=\"small\" column={3}>\r\n                        <Descriptions.Item label=\"功能简介\">\r\n                            该功能属于用户管理下的子功能，你可以通过这个功能来查询本站会员的基本信息，当然你也可以通过这里进行对会员信息的修改。我们也很高兴为你提供相关的报表功能！\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </PageHeader>\r\n\r\n                {/* 表格 */}\r\n                {/* 自己给数据加上key，通过table组件的rowKey属性 */}\r\n                <Table pagination={false} rowKey={(record) => record.id} columns={columns} dataSource={this.state.data.data} />\r\n\r\n                {/* 分页器 */}\r\n                <div style={{ textAlign: \"center\", marginTop: \"25px\", background: \"#fff\", height: \"60px\", lineHeight: \"60px\", paddingTop: \"15px\" }}>\r\n                    {/* \r\n                        defaultCurrent：当前的页码\r\n                        total：总记录数\r\n                     */}\r\n                    <Pagination\r\n                        onChange={this.changePage.bind(this)}\r\n                        defaultCurrent={this.state.page}\r\n                        total={this.state.data.total}\r\n                        showSizeChanger={false}\r\n                    />\r\n                    {/* showSizeChanger={false} */}\r\n                </div>\r\n\r\n                {/* 模态窗口 */}\r\n                <Modal\r\n                    title=\"会员性别统计\"\r\n                    visible={this.state.isModalVisible}\r\n                    closable={false}\r\n                    width={888}\r\n                    footer={[\r\n                        <Button key=\"submit\" type=\"primary\" onClick={this.handleOk.bind(this)}>\r\n                            确定\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    {/* pie图的渲染容器 */}\r\n                    <div id=\"main\" style={{ width: \"888px\", height: \"450px\" }}></div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData() {\r\n        model.getUserList({ page: this.state.page, keyword: this.state.search }).then((res) => {\r\n            if (res.data.errNo === 0) {\r\n                this.setState({\r\n                    data: res.data.paginate,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // 页码改变的事件处理程序\r\n    changePage(page) {\r\n        console.log(page);\r\n        // 更新页码\r\n        this.setState(\r\n            {\r\n                page,\r\n            },\r\n            () =>\r\n                // 根据页码去更新数据\r\n                this.loadData()\r\n        );\r\n    }\r\n\r\n    // 关闭模态窗口\r\n    handleOk = () => {\r\n        this.setState({\r\n            isModalVisible: false,\r\n        });\r\n    };\r\n\r\n    // 显示模态窗口\r\n    showModal() {\r\n        // 获取数据\r\n        model.getPieData().then((res) => {\r\n            if (res.data.errNo === 0) {\r\n                this.setState(\r\n                    {\r\n                        isModalVisible: true,\r\n                    },\r\n                    () => {\r\n                        // 展示pie图\r\n                        var chartDom = document.getElementById(\"main\");\r\n                        var myChart = echarts.init(chartDom);\r\n                        var option;\r\n\r\n                        option = {\r\n                            title: {\r\n                                text: \"本站会员男女比例饼图\",\r\n                                subtext: \"数据来自于数据库\",\r\n                                left: \"center\",\r\n                            },\r\n                            tooltip: {\r\n                                trigger: \"item\",\r\n                                // 显示百分比\r\n                                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n                            },\r\n                            legend: {\r\n                                orient: \"vertical\",\r\n                                left: \"left\",\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    name: \"性别\",\r\n                                    type: \"pie\",\r\n                                    radius: \"50%\",\r\n                                    data: res.data.data,\r\n                                    emphasis: {\r\n                                        itemStyle: {\r\n                                            shadowBlur: 10,\r\n                                            shadowOffsetX: 0,\r\n                                            shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n                                        },\r\n                                    },\r\n                                },\r\n                            ],\r\n                        };\r\n\r\n                        option && myChart.setOption(option);\r\n                    }\r\n                );\r\n            } else {\r\n                message.error(\"数据获取失败！\");\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default List;\r\n"],"sourceRoot":""}